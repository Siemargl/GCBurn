#! /bin/bash

usage() { echo "Usage: $0 [-o <output_suffix_string>] [-d <duration_seconds>]" 1>&2; exit 1; }

./clean >/dev/null

OUTPUT_SUFFIX="Default"
DURATION=120

while getopts ":o:d:" o; do
case "${o}" in
o) OUTPUT_SUFFIX=${OPTARG};;
d) DURATION=${OPTARG};;
*) usage;;
esac
done
shift $((OPTIND -1))

function runVariant() {
  local OPTIND o
  local folder lmode runner variant

  folder=$1
  pushd $folder >/dev/null
  shift

  runner=./run
  variant=$folder
  lmode=1

  while getopts ":l:r:v:" o; do
  case "${o}" in
  l) lmode=${OPTARG};;
  r) runner=${OPTARG};;
  v) variant=${OPTARG};;
  esac
  done
  shift $((OPTIND -1))

  OUTPUT="../../results/$variant-$OUTPUT_SUFFIX.txt"
  echo Series: $variant, writing output to $OUTPUT
  echo

  $runner -l $lmode -p f -r a -t 1 2>&1 | tee $OUTPUT || true
  $runner -l $lmode -p m -r a -t 25pct 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r a -t 50pct 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r a -t 75pct 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r a 2>&1 | tee -a $OUTPUT || true

  $runner -l $lmode -p m -r b -d $DURATION -m 0 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r b -d $DURATION -m 1 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r b -d $DURATION -m 10pct 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r b -d $DURATION -m 25pct 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r b -d $DURATION -m 50pct 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r b -d $DURATION -m 75pct 2>&1 | tee -a $OUTPUT || true

  $runner -l $lmode -p m -r b -t 75pct -d $DURATION -m 0 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r b -t 75pct -d $DURATION -m 1 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r b -t 75pct -d $DURATION -m 10pct 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r b -t 75pct -d $DURATION -m 25pct 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r b -t 75pct -d $DURATION -m 50pct 2>&1 | tee -a $OUTPUT || true
  $runner -l $lmode -p m -r b -t 75pct -d $DURATION -m 75pct 2>&1 | tee -a $OUTPUT || true

  popd >/dev/null
}

runVariant CSharp -v CSharp-Net50
runVariant CSharp -r ./run-netcore31 -v CSharp-Net31
runVariant Go
